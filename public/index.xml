<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>這是我家啊!</title>
        <link>https://example.com/</link>
        <description>Recent content on 這是我家啊!</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <copyright>David Chen</copyright>
        <lastBuildDate>Fri, 08 Nov 2024 16:32:43 +0800</lastBuildDate><atom:link href="https://example.com/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>URLLC</title>
        <link>https://example.com/p/urllc/</link>
        <pubDate>Fri, 08 Nov 2024 16:32:43 +0800</pubDate>
        
        <guid>https://example.com/p/urllc/</guid>
        <description>&lt;p&gt;&lt;strong&gt;這篇文章由 AI 自動產生，尚未經過整理&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&#34;urllc革命性的超可靠低延遲通信技術&#34;&gt;URLLC：革命性的超可靠低延遲通信技術
&lt;/h3&gt;&lt;p&gt;隨著 5G 技術的興起，我們迎來了一個通信技術的全新時代。而在這些令人振奮的技術之中，「超可靠低延遲通信（Ultra-Reliable Low-Latency Communication, URLLC）」是最具潛力且變革性的一項技術。URLLC 旨在提供幾乎即時的反應時間以及接近百分之百的通信可靠性，這對未來的智慧工業、遠程醫療、自動駕駛等應用具有至關重要的影響。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;什麼是-urllc&#34;&gt;什麼是 URLLC？
&lt;/h3&gt;&lt;p&gt;URLLC 是 5G 技術的三大核心應用場景之一（另外兩個為 eMBB 和 mMTC）。它的主要目標是滿足以下兩大需求：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;超可靠性&lt;/strong&gt;：系統的通信成功率需要達到 99.999% 或更高。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;低延遲&lt;/strong&gt;：端到端的通信延遲必須在 1 毫秒以內。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這種通信特性旨在實現對延遲極其敏感且可靠性極高的應用需求，例如自動駕駛中的車輛即時反應、遠程手術中的毫秒級響應、以及智慧工廠中的高精度機器協作。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;urllc-的應用場景&#34;&gt;URLLC 的應用場景
&lt;/h3&gt;&lt;h4 id=&#34;1-自動駕駛&#34;&gt;1. &lt;strong&gt;自動駕駛&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;在自動駕駛系統中，車輛之間（V2V）和車輛與基礎設施之間（V2I）的通信需要極低的延遲來確保交通安全。例如，當前方車輛突然緊急剎車時，後方車輛必須在毫秒內收到信息並採取相應措施。URLLC 的高可靠性和低延遲特性使得這種快速響應成為可能。&lt;/p&gt;
&lt;h4 id=&#34;2-遠程醫療&#34;&gt;2. &lt;strong&gt;遠程醫療&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;遠程手術是現代醫療的一大進步，允許外科醫生使用機器人設備執行精密手術。然而，任何微小的通信延遲都可能對患者造成致命風險。URLLC 提供的 1 毫秒以下延遲保證，使遠程醫療變得更加安全可靠。&lt;/p&gt;
&lt;h4 id=&#34;3-工業自動化&#34;&gt;3. &lt;strong&gt;工業自動化&lt;/strong&gt;
&lt;/h4&gt;&lt;p&gt;智慧工廠中的機器人和自動化系統需要精確的協同操作，這要求通信極為可靠且幾乎無延遲。例如，組裝機器人需要以毫秒級的同步進行操作，以確保生產效率和品質。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;技術挑戰&#34;&gt;技術挑戰
&lt;/h3&gt;&lt;p&gt;實現 URLLC 面臨一些技術挑戰，其中包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;網絡資源調度&lt;/strong&gt;：在確保超低延遲的同時，如何有效分配有限的頻譜資源是一個難題。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;干擾管理&lt;/strong&gt;：在高密度用戶環境中，干擾可能會降低可靠性。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬體限制&lt;/strong&gt;：處理器和傳感器需要更快的響應能力，才能匹配 URLLC 的需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這些挑戰需要透過創新的網絡架構設計、邊緣計算技術以及高效的編碼技術來解決。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;未來的發展方向&#34;&gt;未來的發展方向
&lt;/h3&gt;&lt;p&gt;隨著技術的不斷進步，URLLC 的應用範圍還將進一步擴大。例如，&lt;strong&gt;6G 技術&lt;/strong&gt;可能會將延遲進一步降低到微秒級，並結合 AI 技術實現更加智能化的應用場景。此外，區塊鏈技術的加入也可以進一步提高 URLLC 的安全性和可靠性。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;結語&#34;&gt;結語
&lt;/h3&gt;&lt;p&gt;URLLC 的發展標誌著通信技術進入了一個全新的階段，將極大地改變我們的生活和生產方式。隨著這項技術的不斷成熟，我們可以期待未來在交通、醫療、工業等領域迎來更多的創新應用。它不僅是 5G 技術的亮點，也為下一代通信技術（如 6G）奠定了堅實的基礎。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>PRP、HSR 與 FRER</title>
        <link>https://example.com/p/prphsr-%E8%88%87-frer/</link>
        <pubDate>Fri, 08 Nov 2024 16:14:38 +0800</pubDate>
        
        <guid>https://example.com/p/prphsr-%E8%88%87-frer/</guid>
        <description>&lt;img src="https://example.com/p/prphsr-%E8%88%87-frer/pawel-czerwinski-fnLi5j7kPU4-unsplash.jpg" alt="Featured image of post PRP、HSR 與 FRER" /&gt;&lt;h1 id=&#34;深入淺出prphsr-與-frer--高可靠性網絡技術全面解析&#34;&gt;深入淺出：PRP、HSR 與 FRER —— 高可靠性網絡技術全面解析
&lt;/h1&gt;&lt;p&gt;&lt;strong&gt;這篇文章由 AI 自動產生，尚未經過整理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在現代工業自動化、交通運輸、能源管理和其他關鍵任務系統中，高可靠性網絡是實現穩定運行的基石。針對這些需求，&lt;strong&gt;並行冗餘協議（PRP）&lt;/strong&gt;、&lt;strong&gt;高可用性無縫冗餘（HSR）&lt;/strong&gt; 和 &lt;strong&gt;幀複製與消除技術（FRER）&lt;/strong&gt; 成為不可或缺的技術工具。&lt;/p&gt;
&lt;p&gt;這篇文章將深入探討這三種技術的核心機制、優勢、挑戰及應用場景，幫助您了解如何選擇適合您需求的高可靠性解決方案。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;prp並行冗餘協議&#34;&gt;PRP：並行冗餘協議
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;PRP（Parallel Redundancy Protocol）&lt;/strong&gt; 是專為容錯而設計的高可靠性協議，定義於 &lt;strong&gt;IEC 62439-3 標準&lt;/strong&gt;。其主要特點是通過&lt;strong&gt;雙網並行數據傳輸&lt;/strong&gt;實現零數據丟包，確保在任意網絡故障情況下通信不中斷。&lt;/p&gt;
&lt;h3 id=&#34;prp-的核心機制&#34;&gt;PRP 的核心機制
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;雙網絡冗餘&lt;/strong&gt;：數據包在兩個獨立網絡（LAN A 和 LAN B）上同步發送。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自動故障隔離&lt;/strong&gt;：接收端會選擇最先到達的數據包並丟棄重複數據。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;即時切換&lt;/strong&gt;：在任何單網故障的情況下，通信無需等待恢復或切換時間。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;優勢與挑戰&#34;&gt;優勢與挑戰
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;優勢&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;零恢復時間，確保通信不中斷。&lt;/li&gt;
&lt;li&gt;協議無關性，適用於多種高層協議（如 TCP/IP、Profinet）。&lt;/li&gt;
&lt;li&gt;適合雙網結構的簡單拓撲。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;挑戰&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;硬件成本&lt;/strong&gt;：需要雙網絡接口和額外的網絡基礎設施。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;帶寬消耗&lt;/strong&gt;：同時傳輸兩份數據包增加了網絡負載。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;應用場景&#34;&gt;應用場景
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;工業自動化&lt;/strong&gt;：實時控制和 PLC 系統。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;能源系統&lt;/strong&gt;：變電站的 SCADA 通信。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;醫療設備&lt;/strong&gt;：患者監控和生命支持系統。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;hsr高可用性無縫冗餘&#34;&gt;HSR：高可用性無縫冗餘
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;HSR（High-Availability Seamless Redundancy）&lt;/strong&gt; 與 PRP 一樣，定義於 &lt;strong&gt;IEC 62439-3 標準&lt;/strong&gt;，但它採用&lt;strong&gt;環形網絡拓撲&lt;/strong&gt;，為節點提供更強的容錯能力。&lt;/p&gt;
&lt;h3 id=&#34;hsr-的核心機制&#34;&gt;HSR 的核心機制
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;環網數據轉發&lt;/strong&gt;：數據包在環網中雙向傳輸，每個節點接收數據後再轉發。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;冗餘數據處理&lt;/strong&gt;：接收端會消除重複數據，確保通信可靠。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;即時恢復&lt;/strong&gt;：環網結構使得單一節點故障時，數據仍能通過另一方向繼續傳輸。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;優勢與挑戰-1&#34;&gt;優勢與挑戰
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;優勢&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;零恢復時間，無需等待故障修復。&lt;/li&gt;
&lt;li&gt;每個節點既是通信設備也是轉發設備，增加靈活性。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;挑戰&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;拓撲限制&lt;/strong&gt;：僅適用於環網結構。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;複雜性增加&lt;/strong&gt;：節點數量增多時，管理和排障更加困難。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;應用場景-1&#34;&gt;應用場景
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;交通運輸&lt;/strong&gt;：鐵路信號、航空管制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智慧城市&lt;/strong&gt;：智能路燈和監控系統。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;能源管理&lt;/strong&gt;：電網和可再生能源系統。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;frer幀複製與消除技術&#34;&gt;FRER：幀複製與消除技術
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;FRER（Frame Replication and Elimination for Reliability）&lt;/strong&gt; 是由 &lt;strong&gt;IEEE 802.1CB 標準&lt;/strong&gt;定義的技術，專注於數據的多路徑冗餘傳輸。與 PRP 和 HSR 不同，FRER 的設計更靈活，適用於複雜的網絡拓撲。&lt;/p&gt;
&lt;h3 id=&#34;frer-的核心機制&#34;&gt;FRER 的核心機制
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;數據複製與消除&lt;/strong&gt;：在傳輸層上複製數據包，通過多條路徑發送，接收端根據序列號消除重複數據。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;與 TSN 集成&lt;/strong&gt;：FRER 可與時間敏感網絡（TSN）技術配合，實現更精確的延遲控制和可靠性。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;優勢與挑戰-2&#34;&gt;優勢與挑戰
&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;優勢&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;靈活性&lt;/strong&gt;：不依賴於特定拓撲，適用於多種網絡架構。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;可擴展性&lt;/strong&gt;：可與其他 TSN 技術（如優先級調度）結合。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;低延遲&lt;/strong&gt;：針對實時應用進行優化。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;挑戰&lt;/strong&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;實施門檻&lt;/strong&gt;：需支持 IEEE 802.1 標準的硬件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;數據包管理複雜性&lt;/strong&gt;：多路徑設計可能導致數據包處理負擔增加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;應用場景-2&#34;&gt;應用場景
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;車載通信&lt;/strong&gt;：自動駕駛中的傳感器融合。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;智慧工廠&lt;/strong&gt;：工業 4.0 的實時控制網絡。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;音視頻同步&lt;/strong&gt;：專業音頻和視頻傳輸系統。&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;prphsr-與-frer-的對比&#34;&gt;PRP、HSR 與 FRER 的對比
&lt;/h2&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;特性&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;PRP&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;HSR&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;FRER&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;標準&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;IEC 62439-3&lt;/td&gt;
          &lt;td&gt;IEC 62439-3&lt;/td&gt;
          &lt;td&gt;IEEE 802.1CB&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;運作模式&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;雙網並行冗餘&lt;/td&gt;
          &lt;td&gt;環網冗餘&lt;/td&gt;
          &lt;td&gt;多路徑冗餘&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;拓撲要求&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;雙網絡&lt;/td&gt;
          &lt;td&gt;環網&lt;/td&gt;
          &lt;td&gt;支持任意拓撲&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;恢復時間&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;零恢復時間&lt;/td&gt;
          &lt;td&gt;零恢復時間&lt;/td&gt;
          &lt;td&gt;零恢復時間&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;適用場景&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;工業、能源、醫療&lt;/td&gt;
          &lt;td&gt;交通、能源、城市基建&lt;/td&gt;
          &lt;td&gt;車載通信、智慧工廠、音視頻傳輸&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;可擴展性&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;中等&lt;/td&gt;
          &lt;td&gt;中等&lt;/td&gt;
          &lt;td&gt;高&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如何選擇適合的技術&#34;&gt;如何選擇適合的技術？
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;雙網冗餘場景&lt;/strong&gt;：選擇 PRP，適用於簡單雙網結構的應用。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;環網拓撲場景&lt;/strong&gt;：選擇 HSR，適用於需要節點轉發的場景。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;靈活多拓撲場景&lt;/strong&gt;：選擇 FRER，特別是在與 TSN 集成的應用中。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;總結&#34;&gt;總結
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;PRP、HSR 和 FRER&lt;/strong&gt; 各有其適用範圍與特點，適合不同的高可靠性需求。PRP 和 HSR 在傳統工業和能源領域中具有穩定的應用，而 FRER 作為現代網絡的代表，將在自動駕駛、智慧工廠和音視頻領域發揮越來越重要的作用。&lt;/p&gt;
&lt;p&gt;隨著技術的進步，這些解決方案將繼續演進，為我們構建更安全、可靠的未來網絡奠定基礎。&lt;/p&gt;
&lt;h2 id=&#34;reference&#34;&gt;reference
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.oringnet.com/zh/knowledge-base/what-is-hsr-prp-3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;什麼是 HSR/PRP?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hongtronics.com/hsr-prp-cut-through-switching-store-and-forward/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;甚麼是 HSR&amp;amp;PRP?FPGA 實現直通交換與存儲轉發的切換延遲&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Solve hugo push issue</title>
        <link>https://example.com/p/solve-hugo-push-issue/</link>
        <pubDate>Thu, 07 Nov 2024 18:51:21 +0800</pubDate>
        
        <guid>https://example.com/p/solve-hugo-push-issue/</guid>
        <description>&lt;img src="https://example.com/p/solve-hugo-push-issue/pawel-czerwinski-xubOAAKUwXc-unsplash.jpg" alt="Featured image of post Solve hugo push issue" /&gt;&lt;h1 id=&#34;解決-hugo-部署失敗的問題本機正常但-github-無法顯示&#34;&gt;解決 Hugo 部署失敗的問題：本機正常但 GitHub 無法顯示
&lt;/h1&gt;&lt;p&gt;使用 Hugo 建立靜態網站時，有時可能會遇到這樣的情況：在本機使用 &lt;code&gt;hugo server&lt;/code&gt; 測試時一切正常，但部署到 GitHub Pages 上後，網站卻出現錯誤或無法正確顯示。本文將說明這個問題的可能原因，並提供簡單的解決方法。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;問題表現方式&#34;&gt;問題表現方式
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;在本機使用 &lt;code&gt;hugo server&lt;/code&gt; 指令時，網站可以正常運行，所有內容正確顯示。&lt;/li&gt;
&lt;li&gt;將網站的內容推送（push）到 GitHub 後，部署的網站卻出現問題：
&lt;ul&gt;
&lt;li&gt;網頁完全無法出現&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;問題原因分析&#34;&gt;問題原因分析
&lt;/h2&gt;&lt;p&gt;這種情況可能與 Hugo 在生成靜態網站時未正確清理輸出目錄有關。Hugo 預設會將生成的檔案輸出到 &lt;code&gt;public&lt;/code&gt; 目錄，如果該目錄中存在殘留的舊檔案，這些檔案可能會被推送到 GitHub，導致部署的網站出現問題。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;解決方法&#34;&gt;解決方法
&lt;/h2&gt;&lt;p&gt;要解決這個問題，可以嘗試以下步驟：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;清理輸出目錄並重新生成網站&lt;/strong&gt;
使用 &lt;code&gt;hugo --cleanDestinationDir&lt;/code&gt; 指令，這會在生成靜態網站時自動清理輸出目錄，確保僅保留最新的檔案。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo --cleanDestinationDir
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;此指令確保 &lt;code&gt;public&lt;/code&gt; 目錄中的舊檔案被移除，避免部署過時或衝突的資源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;重新部署到 GitHub&lt;/strong&gt;
在執行清理和重新生成後，將更新後的檔案推送到 GitHub：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;Fix deployment issue&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;檢查部署狀況&lt;/strong&gt;
完成推送後，檢查 GitHub Pages 部署狀態，確認網站是否恢復正常。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;小結&#34;&gt;小結
&lt;/h2&gt;&lt;p&gt;當你遇到 Hugo 部署失敗的情況時，使用 &lt;code&gt;hugo --cleanDestinationDir&lt;/code&gt; 清理輸出目錄是一個快速有效的解決方案。這能避免舊檔案干擾新內容的部署。如果問題仍然存在，建議檢查 GitHub Pages 的設定或 Hugo 配置檔案，確保兩者的相容性。&lt;/p&gt;
&lt;p&gt;希望這篇文章能幫助你順利解決 Hugo 部署的問題，讓你的網站順利上線！🚀&lt;/p&gt;
</description>
        </item>
        <item>
        <title>What is p4</title>
        <link>https://example.com/p/what-is-p4/</link>
        <pubDate>Thu, 07 Nov 2024 17:38:34 +0800</pubDate>
        
        <guid>https://example.com/p/what-is-p4/</guid>
        <description>&lt;img src="https://example.com/p/what-is-p4/pawel-czerwinski-ZJk8NX0aR8s-unsplash.jpg" alt="Featured image of post What is p4" /&gt;&lt;h2 id=&#34;p4-網路的介紹與應用&#34;&gt;P4 網路的介紹與應用
&lt;/h2&gt;&lt;p&gt;隨著網路技術的快速發展，如何高效靈活地處理流量成為了關鍵議題。 &lt;strong&gt;P4 (Programming Protocol-independent Packet Processors)&lt;/strong&gt; 是一種專為軟體定義網路 (SDN) 設計的高階程式語言，用於定義 Data Plane 設備的行為。底下將介紹 P4 的基本概念、核心功能及其應用場景。&lt;/p&gt;
&lt;h2 id=&#34;什麼是-p4&#34;&gt;&lt;strong&gt;什麼是 P4？&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;P4 是一種高階語言，主要特點是 Data Plane 的可程式性。傳統網路設備 (如路由器和交換機) 的 Data Plane 行為通常由硬體製造商預先定義，缺乏靈活性。而 P4 的出現，允許開發者通過程式自定義封包處理行為，使網路設備可以更彈性的使用。&lt;/p&gt;
&lt;p&gt;P4 具有以下特點：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;協定無關性 (Protocol Independence) ：&lt;/strong&gt; 可以處理任意協定封包，而不受傳統協定限制。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;靈活性高：&lt;/strong&gt; 支援使用者定義 Field 和使用，可以適應不斷變化的需求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;硬體抽象性：&lt;/strong&gt; 可運行於多種硬體平台，如 ASIC、FPGA 和網路模擬器。&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;openflow-與-p4-的相同和差別&#34;&gt;OpenFlow 與 P4 的相同和差別
&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;OpenFlow&lt;/strong&gt; 和 &lt;strong&gt;P4&lt;/strong&gt; 都是與 SDN 相關的重要技術，提升網路設備的靈活性與可程式性。但它們的設計目的、功能範圍及應用方式有明顯的不同。下面是相關性的說明與差異的比較表格:&lt;/p&gt;
&lt;h3 id=&#34;相關性&#34;&gt;&lt;strong&gt;相關性&lt;/strong&gt;
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;同屬 SDN 範疇：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;OpenFlow&lt;/strong&gt; 和 &lt;strong&gt;P4&lt;/strong&gt; 都改變了傳統網路設備的固定功能，將更多的控制交給網路管理者，降低硬體製造商對設備的控制。&lt;/li&gt;
&lt;li&gt;二者均可以支援動態配置網路，而不是依賴硬體製造商的預設功能。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Data Plane 與 Control Plane 的互動：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OpenFlow 定義了一個 Data Plane 與 Control Plane 之間的通訊標準。&lt;/li&gt;
&lt;li&gt;P4 則專注在 Data Plane 的可程式化，但可以與 OpenFlow 結合使用，透過 Control Plane 管理 P4 的行為。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;軟硬體之間的獨立性：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;二者都把網路的功能從依賴於硬體，轉變成獨立於硬體，使網路的功能可在不同平台上運行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;差異性&#34;&gt;&lt;strong&gt;差異性&lt;/strong&gt;
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;strong&gt;項目&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;OpenFlow&lt;/strong&gt;&lt;/th&gt;
          &lt;th&gt;&lt;strong&gt;P4&lt;/strong&gt;&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;主要目標&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;標準化 Data Plane 與 Control Plane 之間的通訊協定。&lt;/td&gt;
          &lt;td&gt;提供 Data Plane 完全的可程式化，定義如何處理封包。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;控制範圍&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;針對 Flow Table 的 Match，僅能處理特定協定 (如 IPv4、IPv6、VLAN 等) 。(如圖 1/2)&lt;/td&gt;
          &lt;td&gt;可自行定義 Protocol Fields、封包處理邏輯和新協定，具有更高的靈活性。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;層次分工&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;重點在控制平面， Data Plane 的行為相對固定，由硬體自行設定。&lt;/td&gt;
          &lt;td&gt;聚焦於 Data Plane ，可自行設計封包解析、處理和轉發行為。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;適用範圍&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;適合標準網路設備，用於流量工程、網路優化等控制層面的應用。&lt;/td&gt;
          &lt;td&gt;更適合需要高度自定義的場景，如研究新協定、特殊安全需求或新型封包格式的處理。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;語言與標準&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;使用固定的 OpenFlow 協定標準，無法靈活定義封包的處理行為。&lt;/td&gt;
          &lt;td&gt;使用 P4 程式語言，允許完全自定義處理邏輯，支援多種 Data Plane 硬體和平台。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;硬體支援&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;必須使用支援 OpenFlow 協定的硬體設備。&lt;/td&gt;
          &lt;td&gt;支援多種硬體平台，包括 ASIC、FPGA、網路處理器 (NPU) 或者網路模擬器等等。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;strong&gt;協定依賴性&lt;/strong&gt;&lt;/td&gt;
          &lt;td&gt;固定支援已知協定，無法輕易新增新協定的功能。&lt;/td&gt;
          &lt;td&gt;完全協定無關，可自由設計支援任何協定的封包處理。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/p/what-is-p4/p4-09.png&#34;
	width=&#34;2845&#34;
	height=&#34;2134&#34;
	srcset=&#34;https://example.com/p/what-is-p4/p4-09_hu6171328622038328369.png 480w, https://example.com/p/what-is-p4/p4-09_hu10979434447022775760.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;圖1：OpenFlow 的 Match 和 Action&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;319px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/p/what-is-p4/Abuynwi.png&#34;
	width=&#34;527&#34;
	height=&#34;186&#34;
	srcset=&#34;https://example.com/p/what-is-p4/Abuynwi_hu3894902318755102197.png 480w, https://example.com/p/what-is-p4/Abuynwi_hu12692879872724982288.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;圖2：OpenFlow 的 Header Fields 數量變化&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;283&#34;
		data-flex-basis=&#34;680px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/p/what-is-p4/1UMaVhT.png&#34;
	width=&#34;506&#34;
	height=&#34;347&#34;
	srcset=&#34;https://example.com/p/what-is-p4/1UMaVhT_hu15223468364882922661.png 480w, https://example.com/p/what-is-p4/1UMaVhT_hu6502668705448828017.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;圖3: OpenFlow 和 P4 所運作的位置&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;145&#34;
		data-flex-basis=&#34;349px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;p4-的核心結構&#34;&gt;&lt;strong&gt;P4 的核心結構&lt;/strong&gt;
&lt;/h2&gt;&lt;p&gt;P4 程式的基本組成包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;封包解析器 (Parser) ：&lt;/strong&gt; 定義如何解析進入的封包。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;封包處理邏輯 (Control Block) ：&lt;/strong&gt; 指定處理封包的規則，例如轉發、丟棄或修改。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;封包去解析器 (Deparser) ：&lt;/strong&gt; 定義如何重建封包以便發送。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;p4-的應用場景&#34;&gt;&lt;strong&gt;P4 的應用場景&lt;/strong&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;網路監控：&lt;/strong&gt;
P4 可自定義封包處理行為，監控對特定流量。例如，通過執行延遲測量和流量計數來改善網路性能。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;流量工程：&lt;/strong&gt;
網路工程師可以設計自定義轉發邏輯，改善流量路徑，實作負載均衡或快速故障恢復。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;安全防護：&lt;/strong&gt;
使用 P4 構建動態訪問控制列表 (ACL) 和封包篩選功能，增強網路安全性。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;創新協定實驗：&lt;/strong&gt;
研究人員可快速設計並測試新協定，不須等待硬體製造商支援。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;reference&#34;&gt;&lt;strong&gt;reference&lt;/strong&gt;
&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://opennetworking.org/wp-content/uploads/2020/12/P4_D2_East_2018_01_basics.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;P4 - tutorial&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://olivermichel.github.io/doc/p4.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;P4: Programming Protocol-independent Packet Processors&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ithelp.ithome.com.tw/articles/10243915?sc=rss.qu&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;P4 paper (cont.)&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Sierpinski Gasket</title>
        <link>https://example.com/p/sierpinski-gasket/</link>
        <pubDate>Wed, 06 Nov 2024 12:39:48 +0800</pubDate>
        
        <guid>https://example.com/p/sierpinski-gasket/</guid>
        <description>&lt;img src="https://example.com/p/sierpinski-gasket/pawel-czerwinski-yUkcmOU07CQ-unsplash.jpg" alt="Featured image of post Sierpinski Gasket" /&gt;&lt;h1 id=&#34;探索-sierpinski-gasket&#34;&gt;探索 Sierpinski Gasket
&lt;/h1&gt;&lt;p&gt;在數學的廣闊領域中，分形幾何以其獨特的自相似性和無限的複雜性吸引了無數人的目光。其中，&lt;strong&gt;Sierpinski Gasket（謝爾賓斯基三角形）&lt;/strong&gt; 作為分形幾何中的經典代表，展現了簡單規則下蘊藏的無限美麗。今天，我們將深入了解 Sierpinski Gasket，探索其構造方法、數學性質及其在現實中的應用。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/p/sierpinski-gasket/Sierpinski_Gasket.png&#34;
	width=&#34;592&#34;
	height=&#34;583&#34;
	srcset=&#34;https://example.com/p/sierpinski-gasket/Sierpinski_Gasket_hu6900824192516665066.png 480w, https://example.com/p/sierpinski-gasket/Sierpinski_Gasket_hu17873769084831844443.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Sierpinski Gasket Triangle&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;243px&#34;
	
&gt;&lt;/p&gt;
&lt;h2 id=&#34;什麼是-sierpinski-gasket&#34;&gt;什麼是 Sierpinski Gasket？
&lt;/h2&gt;&lt;p&gt;Sierpinski Gasket，又稱謝爾賓斯基三角形，是由波蘭數學家瓦茨瓦夫·謝爾賓斯基（Wacław Sierpiński）在 1915 年提出的分形結構。&lt;/p&gt;
&lt;h2 id=&#34;sierpinski-gasket-的建立方法&#34;&gt;Sierpinski Gasket 的建立方法
&lt;/h2&gt;&lt;p&gt;建立 Sierpinski Gasket 的方法有多種，其中最直觀的是迭代法。以下是常見的兩種構造方式：&lt;/p&gt;
&lt;h3 id=&#34;1-移除中間三角形法&#34;&gt;1. 移除中間三角形法
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;初始形狀&lt;/strong&gt;：從一個等邊三角形開始。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;第一次迭代&lt;/strong&gt;：將初始三角形分割成四個小的等邊三角形，移除中間的那個。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;後續迭代&lt;/strong&gt;：對剩下的每一個小三角形重複上述步驟，逐步移除每個小三角形的中間部分。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;隨著迭代次數的增加，剩餘的圖形越來越接近 Sierpinski Gasket，展示出其獨特的蜂窩狀結構。&lt;/p&gt;
&lt;h3 id=&#34;2-遞迴定義法&#34;&gt;2. 遞迴定義法
&lt;/h3&gt;&lt;p&gt;Sierpinski Gasket 也可以透過遞迴函數來定義，每一層的圖形都是前一層的自相似縮小版本。這種方法在電腦繪圖中特別常用，能夠高效地生成複雜的分形圖案。&lt;/p&gt;
&lt;h2 id=&#34;sierpinski-gasket-的數學性質&#34;&gt;Sierpinski Gasket 的數學性質
&lt;/h2&gt;&lt;p&gt;Sierpinski Gasket 不僅在視覺上令人嘆為觀止，其數學性質也同樣令人著迷：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;自相似性&lt;/strong&gt;：無論從哪個尺度觀察，Sierpinski Gasket 都呈現出相似的結構。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;分形維數&lt;/strong&gt;：Sierpinski Gasket 的&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Fractal_dimension&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;分形維數&lt;/a&gt;約為 1.585，比一維線段大，但小於二維平面，反映出其複雜的幾何結構。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;無窮細節&lt;/strong&gt;：隨著迭代次數的增加，圖形的細節變得無限豐富，無法用有限的幾何圖形完全描述。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;sierpinski-gasket-的應用&#34;&gt;Sierpinski Gasket 的應用
&lt;/h2&gt;&lt;p&gt;儘管 Sierpinski Gasket 起源於純數學研究，但其獨特的結構在多個領域中找到了應用：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;電腦圖形學&lt;/strong&gt;：用於生成複雜的圖案和紋理，提升圖形的細節和真實感。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;藝術與設計&lt;/strong&gt;：其獨特的視覺效果常被應用於裝飾藝術、建築設計等領域，創造出引人入勝的視覺作品。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自然界中的類似結構&lt;/strong&gt;：類似的分形結構在自然界中也屢見不鮮，如某些植物的葉脈結構、雪花的形態等，展示了分形幾何在自然界中的普遍性。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;如何繪製-sierpinski-gasket&#34;&gt;如何繪製 Sierpinski Gasket
&lt;/h2&gt;&lt;p&gt;繪製 Sierpinski Gasket 的過程不僅能幫助我們更好地理解其構造原理，還能鍛鍊程式設計和數學思維。以下是使用 Python 的 Turtle 模組繪製 Sierpinski Gasket 的範例程式碼：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt; 1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 7
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 8
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt; 9
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;10
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;11
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;12
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;13
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;14
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;15
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;16
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;17
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;18
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;19
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;20
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;21
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;22
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;23
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;24
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;25
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;26
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;27
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;28
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;29
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;30
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;31
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;32
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;33
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;34
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;35
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;36
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;37
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;38
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;39
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;40
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;41
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;42
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;43
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;44
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;45
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;turtle&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;draw_triangle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;fillcolor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;up&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;down&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;begin_fill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;goto&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;][&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;end_fill&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;sierpinski&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;colors&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;blue&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;red&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;green&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;white&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;yellow&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;              &lt;span class=&#34;s1&#34;&gt;&amp;#39;violet&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;orange&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;draw_triangle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;colors&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;sierpinski&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;get_mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;get_mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;sierpinski&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;get_mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;get_mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;n&#34;&gt;sierpinski&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;([&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;get_mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]),&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                    &lt;span class=&#34;n&#34;&gt;get_mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;                   &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;get_mid&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;point1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;point2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;((&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;point1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;point2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;point1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;point2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;])&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;Turtle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;speed&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;bgcolor&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s1&#34;&gt;&amp;#39;black&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;200&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt;  &lt;span class=&#34;c1&#34;&gt;# 調整迭代層數&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;sierpinski&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;vertices&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;level&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;my_turtle&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;turtle&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;done&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s1&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;h2 id=&#34;cpp-source-code&#34;&gt;Cpp Source Code
&lt;/h2&gt;&lt;p&gt;Graphic-programming-language CH2 : &lt;a class=&#34;link&#34; href=&#34;https://github.com/davidchen0970/Graphic-programming-language/blob/main/CH2/CH2_1%20Sierpinski%20Gasket.md&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;here&lt;/a&gt;&lt;/p&gt;
</description>
        </item>
        <item>
        <title>P4 Troubleshooting - Symbolic Link</title>
        <link>https://example.com/p/p4-troubleshooting-symbolic-link/</link>
        <pubDate>Tue, 05 Nov 2024 02:35:09 +0800</pubDate>
        
        <guid>https://example.com/p/p4-troubleshooting-symbolic-link/</guid>
        <description>&lt;img src="https://example.com/p/p4-troubleshooting-symbolic-link/pawel-czerwinski-8uZPynIu-rQ-unsplash.jpg" alt="Featured image of post P4 Troubleshooting - Symbolic Link" /&gt;&lt;h1 id=&#34;p4-超搞剛---symbolic-link&#34;&gt;P4 超搞剛 - Symbolic Link
&lt;/h1&gt;&lt;p&gt;在一般我們使用 P4 當中的 tutorials 文件時，都可以正常使用 &lt;code&gt;make run&lt;/code&gt; 這個指令，但當我們離開這個資料夾之後，會發現這個 &lt;code&gt;make run&lt;/code&gt; 這個指令會變得沒有用，原因通常都是:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Makefile:4: ../../utils/Makefile: No such file or directory
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;make: *** No rule to make target &amp;#39;../../utils/Makefile&amp;#39;.  Stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這個問題代表 MakeFile 找不到，所以無法執行 &lt;code&gt;make run&lt;/code&gt; ，因此我們要想個辦法。
解決這個問題的辦法之一是利用 symbolic link（符號連結），來建立所需的路徑，讓系統找到目標 &lt;code&gt;Makefile&lt;/code&gt;，而無需修改現有的專案結構。&lt;/p&gt;
&lt;h2 id=&#34;使用-symbolic-link-解決-makefile-缺失問題&#34;&gt;使用 Symbolic Link 解決 Makefile 缺失問題
&lt;/h2&gt;&lt;p&gt;透過建立 symbolic link，可以指向現有的 Makefile，並解決「找不到檔案」的問題。這種方法相當靈活，可以在保持原專案目錄結構的情況下修復路徑問題。&lt;/p&gt;
&lt;h3 id=&#34;步驟&#34;&gt;步驟
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;確認有效的 Makefile 路徑&lt;/strong&gt;：首先，找到一份可用的 Makefile，一般是在專案其他路徑下或相關的資料夾中。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;切換到預期目錄&lt;/strong&gt;：進入 &lt;code&gt;make&lt;/code&gt; 指令所期望的目錄，例如 &lt;code&gt;../../utils/&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;建立符號連結&lt;/strong&gt;：使用 &lt;code&gt;ln -s&lt;/code&gt; 指令來建立符號連結，語法如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ln -s /path/to/existing/Makefile Makefile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;例如，如果你的有效 Makefile 位於 &lt;code&gt;/home/p4/tutorials/utils&lt;/code&gt;，可以執行以下指令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ln -s /path/to/project/utils ../../utils
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;確認符號連結&lt;/strong&gt;：創建連結後，使用以下指令檢查是否指向正確的 Makefile：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ls -l ../../utils/Makefile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;如果有的話，會看到 Linux 回覆一個 &lt;code&gt;w-r-- 1&lt;/code&gt; &amp;hellip; 或類似的回應，代表 Linux 有找到這個檔案，這樣就可以繼續使用 &lt;code&gt;make run&lt;/code&gt; 了&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;額外問題&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;2
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;3
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;4
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;5
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;6
&lt;/span&gt;&lt;span class=&#34;lnt&#34;&gt;7
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- ERROR! While parsing input runtime configuration: file does not exist /home/p4/Desktop/tutorials/basic/build/basic.p4.p4info.txtpb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Configuring switch s2 using P4Runtime with file pod-topo/s2-runtime.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- ERROR! While parsing input runtime configuration: file does not exist /home/p4/Desktop/tutorials/basic/build/basic.p4.p4info.txtpb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Configuring switch s3 using P4Runtime with file pod-topo/s3-runtime.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- ERROR! While parsing input runtime configuration: file does not exist /home/p4/Desktop/tutorials/basic/build/basic.p4.p4info.txtpb
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Configuring switch s4 using P4Runtime with file pod-topo/s4-runtime.json
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;- ERROR! While parsing input runtime configuration: file does not exist /home/p4/Desktop/tutorials/basic/build/basic.p4.p4info.txtpb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;p&gt;這個問題可能由於檔案名稱或路徑配置錯誤。以下是幾個解決方法來修正這個錯誤：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;檢查並重試編譯參數 (打底下參數就對了，p4 叫啥名字就自己改名)&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;
&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;
&lt;td class=&#34;lntd&#34;&gt;
&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;p4c-bm2-ss --p4v 16 --p4runtime-files build/basic.p4.p4info.txt -o build/basic.json basic.p4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;更新配置文件使用 &lt;code&gt;.txt&lt;/code&gt; 格式
確保所有指向 &lt;code&gt;p4info&lt;/code&gt; 文件的配置文件都使用 &lt;code&gt;.txt&lt;/code&gt; 後綴，例如 &lt;code&gt;pod-topo/s1-runtime.json&lt;/code&gt; 中的路徑更新為 &lt;code&gt;build/basic.p4.p4info.txt&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;再次運行 &lt;code&gt;make run&lt;/code&gt;
當文件生成後，請再次執行 &lt;code&gt;make run&lt;/code&gt;，以檢查是否可以順利運行並成功配置交換機。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這些步驟應該可以解決 &lt;code&gt;.txtpb&lt;/code&gt; 格式無法識別的問題，並讓編譯器成功生成 &lt;code&gt;p4runtime&lt;/code&gt; 文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>關於</title>
        <link>https://example.com/%E9%97%9C%E6%96%BC/</link>
        <pubDate>Mon, 04 Nov 2024 00:00:00 +0000</pubDate>
        
        <guid>https://example.com/%E9%97%9C%E6%96%BC/</guid>
        <description>&lt;h3 id=&#34;關於我&#34;&gt;關於我
&lt;/h3&gt;&lt;p&gt;你好！我是一名資工系的學生。我對於程式設計和技術充滿熱情，尤其是在 人工智慧、網頁開發領域。我相信技術可以改變世界，所以我常常提升自己的技能，以便能夠在未來的工作中發揮作用。&lt;/p&gt;
&lt;h3 id=&#34;教育背景&#34;&gt;教育背景
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;學校名稱&lt;/strong&gt;：目前就讀於 [學校名稱]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;學位&lt;/strong&gt;：資工系碩士&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;在校成就&lt;/strong&gt;：
&lt;ul&gt;
&lt;li&gt;[獲得的獎學金或榮譽]&lt;/li&gt;
&lt;li&gt;[參加的競賽或專案，例如：ACM 競賽、Hackathon 等]&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;技能&#34;&gt;技能
&lt;/h3&gt;&lt;p&gt;我具備以下技能：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;程式語言&lt;/strong&gt;：熟悉 C++ ，初學 Python、JavaScript 等&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;網頁開發&lt;/strong&gt;：具備 HTML、CSS 和 JavaScript 的基礎知識&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;專案經驗&#34;&gt;專案經驗
&lt;/h3&gt;&lt;p&gt;(施工中&amp;hellip; )&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;專案名稱 1&lt;/strong&gt;：描述這個專案的目標、使用的技術和你的貢獻。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;專案名稱 2&lt;/strong&gt;：描述這個專案的目標、使用的技術和你的貢獻。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;專案名稱 3&lt;/strong&gt;：描述這個專案的目標、使用的技術和你的貢獻。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;聯絡方式&#34;&gt;聯絡方式
&lt;/h3&gt;&lt;p&gt;如果你有任何問題或想進一步了解我，請隨時聯絡我！你可以通過以下方式找到我：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;電子郵件&lt;/strong&gt;：apple1051629@gmail.com&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;謝謝你花時間了解我！&lt;/p&gt;
</description>
        </item>
        <item>
        <title>檔案</title>
        <link>https://example.com/archives/</link>
        <pubDate>Tue, 28 May 2019 00:00:00 +0000</pubDate>
        
        <guid>https://example.com/archives/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
