<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>SDN on 歡迎光臨我家</title>
        <link>https://example.com/categories/sdn/</link>
        <description>Recent content in SDN on 歡迎光臨我家</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <copyright>David Chen</copyright>
        <lastBuildDate>Sat, 16 Nov 2024 14:05:21 +0800</lastBuildDate><atom:link href="https://example.com/categories/sdn/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>OpenFlow Protocol</title>
        <link>https://example.com/p/openflow-protocol/</link>
        <pubDate>Sat, 16 Nov 2024 14:05:21 +0800</pubDate>
        
        <guid>https://example.com/p/openflow-protocol/</guid>
        <description>&lt;h1 id=&#34;軟體定義網路---openflow-protocol-2-4&#34;&gt;軟體定義網路 - OpenFlow Protocol (2-4)
&lt;/h1&gt;&lt;p&gt;reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://opennetworking.org/wp-content/uploads/2014/10/openflow-switch-v1.3.5.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenFlow Switch Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=dYE_AVoXtgA&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2-4 OpenFlow Switch Protocol&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;目錄:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OpenFlow Header&lt;/li&gt;
&lt;li&gt;OpenFlow 交換器協定的三種分群&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-openflow-header&#34;&gt;1. OpenFlow Header
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;其他 protocol 的 header&lt;/th&gt;
          &lt;th&gt;Version&lt;/th&gt;
          &lt;th&gt;Type&lt;/th&gt;
          &lt;th&gt;Length&lt;/th&gt;
          &lt;th&gt;Transaction ID&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;hellip;.&lt;/td&gt;
          &lt;td&gt;&amp;hellip;.&lt;/td&gt;
          &lt;td&gt;..&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以下分別介紹 :&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;欄位&lt;/th&gt;
          &lt;th&gt;長度 (bit)&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Version&lt;/td&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;OpenFlow Protocol 的&lt;a class=&#34;link&#34; href=&#34;#OpenFlow-%e7%89%88%e6%9c%ac%e5%8f%8a%e7%89%88%e6%9c%ac%e4%bb%a3%e7%a2%bc%e5%b0%8d%e7%85%a7%e8%a1%a8&#34; &gt;版本&lt;/a&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Type&lt;/td&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Length&lt;/td&gt;
          &lt;td&gt;16&lt;/td&gt;
          &lt;td&gt;用來標記 OpenFlow 信令實際內容長度&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Transaction ID&lt;/td&gt;
          &lt;td&gt;32&lt;/td&gt;
          &lt;td&gt;標記溝通的順序，幫助controller 和 switch 知道溝通的訊息&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;2-openflow-交換器協定的三種分群&#34;&gt;2. OpenFlow 交換器協定的三種分群
&lt;/h3&gt;&lt;p&gt;分群的意義就是把 controller 與 switch 的訊息方向。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;對稱 (Symmetric)&lt;/li&gt;
&lt;li&gt;控制器到交換器 (Controller-to-switch)&lt;/li&gt;
&lt;li&gt;非同步 (Asynchronous)&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;21-對稱-symmetric&#34;&gt;2.1 對稱 (Symmetric)
&lt;/h4&gt;&lt;p&gt;代表 Controller 與 Switch 之間的溝通是雙向的。&lt;strong&gt;兩者都可以直接發起信令&lt;/strong&gt;，無須任何請求。裡面含有三種信令:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Hello&lt;/li&gt;
&lt;li&gt;Echo&lt;/li&gt;
&lt;li&gt;Experimenter&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;22-控制器到交換器-controller-to-switch&#34;&gt;2.2 控制器到交換器 (Controller-to-switch)
&lt;/h4&gt;&lt;p&gt;信令由 &lt;strong&gt;controller&lt;/strong&gt; 發起，通常用於管理或檢查 switch 的狀態。&lt;/p&gt;
&lt;h4 id=&#34;23-非同步-asynchronous&#34;&gt;2.3 非同步 (Asynchronous)
&lt;/h4&gt;&lt;p&gt;信令由 &lt;strong&gt;Switch&lt;/strong&gt; 發起，通常用於更新 controller 的狀態及更新與 controller 有關的網路事件。&lt;/p&gt;
&lt;h4 id=&#34;openflow-版本及版本代碼對照表&#34;&gt;OpenFlow 版本及版本代碼對照表
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OpenFlow 版本&lt;/th&gt;
          &lt;th&gt;版本代碼&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1.0.0&lt;/td&gt;
          &lt;td&gt;0X01&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1.1.0&lt;/td&gt;
          &lt;td&gt;0X02&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1.2.0&lt;/td&gt;
          &lt;td&gt;0X03&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1.3.0&lt;/td&gt;
          &lt;td&gt;0X04&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1.4.0&lt;/td&gt;
          &lt;td&gt;0X05&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;1.5.0&lt;/td&gt;
          &lt;td&gt;0X06&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h6 id=&#34;tags-sdn&#34;&gt;tags: &lt;code&gt;SDN&lt;/code&gt;
&lt;/h6&gt;</description>
        </item>
        <item>
        <title>OpenFlow Group and Meter Table</title>
        <link>https://example.com/p/openflow-group-and-meter-table/</link>
        <pubDate>Sat, 16 Nov 2024 14:02:21 +0800</pubDate>
        
        <guid>https://example.com/p/openflow-group-and-meter-table/</guid>
        <description>&lt;h1 id=&#34;軟體定義網路---openflow-中-group--meter-table-2-3&#34;&gt;軟體定義網路 - OpenFlow 中 Group / Meter Table (2-3)
&lt;/h1&gt;&lt;p&gt;reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=kHdym8hVeFs&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2-3 GroupTable and MeterTable&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://opennetworking.org/wp-content/uploads/2014/10/openflow-switch-v1.3.5.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenFlow Switch Specification&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;目錄:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#1-Group-Table&#34; &gt;Group Table&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#2-Meter-Table&#34; &gt;Meter Table&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-group-table&#34;&gt;1. Group Table
&lt;/h3&gt;&lt;p&gt;以下是 Group Table 的長相 :&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Group Idantifier&lt;/th&gt;
          &lt;th&gt;Group Type&lt;/th&gt;
          &lt;th&gt;Counter&lt;/th&gt;
          &lt;th&gt;Action Buckets&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Group Identifier : 是一個 32 bit 的非負整數，用來識別用。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#11-Group-Type&#34; &gt;Group Type&lt;/a&gt; : 用來決定此 Group 的 semantic。 共有四種。&lt;/li&gt;
&lt;li&gt;Counter : 用來計算此 Group 被使用幾次。&lt;/li&gt;
&lt;li&gt;Action Buckets : 內含一堆 action bucket ，而每個 action bucket 都內含著一系列的 &lt;a class=&#34;link&#34; href=&#34;https://hackmd.io/@91UWhfTFSYS7v0K-bURk6A/rylyjGUni#switch-processing&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;action&lt;/a&gt; 。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;11-group-type&#34;&gt;1.1 Group Type
&lt;/h4&gt;&lt;p&gt;用來決定此 Group 的 semantic。 以下共有四種。&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;名稱&lt;/th&gt;
          &lt;th&gt;switch 支援程度&lt;/th&gt;
          &lt;th&gt;解釋&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Indirect&lt;/td&gt;
          &lt;td&gt;必須支援&lt;/td&gt;
          &lt;td&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;去執行 action bucket 裡面的動作。&lt;/li&gt;&lt;li&gt;此組的 action bucket 只會有一個。&lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;All&lt;/td&gt;
          &lt;td&gt;必須支援&lt;/td&gt;
          &lt;td&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt; &lt;li&gt;去執行 action bucket 內&lt;strong&gt;所有的&lt;/strong&gt;動作。&lt;/li&gt; &lt;li&gt;此組的 action bucket 可以有很多個。&lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Select&lt;/td&gt;
          &lt;td&gt;不一定支援&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;fast failover&lt;/td&gt;
          &lt;td&gt;不一定支援&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;12-小例子&#34;&gt;1.2 小例子
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Group Idantifier&lt;/th&gt;
          &lt;th&gt;Group Type&lt;/th&gt;
          &lt;th&gt;Counter&lt;/th&gt;
          &lt;th&gt;Action Buckets&lt;/th&gt;
          &lt;th&gt;動作解釋&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;7&lt;/td&gt;
          &lt;td&gt;Indirect&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;{output 3}&lt;/td&gt;
          &lt;td&gt;從 output 3 丟出去&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;8&lt;/td&gt;
          &lt;td&gt;All&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;{output 1}, {output 3}&lt;/td&gt;
          &lt;td&gt;all 會複製封包， 分別在 port 1/3 各傳送一份。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;9&lt;/td&gt;
          &lt;td&gt;Select&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;{output 1}, {output 3}&lt;/td&gt;
          &lt;td&gt;封包會選擇 port 1/3 的其中一個送出去。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;10&lt;/td&gt;
          &lt;td&gt;fast failover&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;{output 1}, {output 3}&lt;/td&gt;
          &lt;td&gt;預設會先傳送某一個 port ，若發現預設 port 的有問題時，會在不經過 controller 的情況下，直接使用 action bucket 另外一個 port 傳送。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;※ failover : 故障排除&lt;/p&gt;
&lt;h3 id=&#34;2-meter-table&#34;&gt;2. Meter Table
&lt;/h3&gt;&lt;p&gt;以下是 Meter Table 的長相 :&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Meter Identifier&lt;/th&gt;
          &lt;th&gt;Meter Band&lt;/th&gt;
          &lt;th&gt;Counter&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;{&amp;hellip;},{&amp;hellip;}&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;{&amp;hellip;}&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;21-meter-table----meter-band&#34;&gt;2.1 Meter Table &amp;ndash; Meter Band
&lt;/h4&gt;&lt;p&gt;其中 Meter Band 可以再放大成底下的樣子 :&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Band Type&lt;/th&gt;
          &lt;th&gt;Rate&lt;/th&gt;
          &lt;th&gt;Burst&lt;/th&gt;
          &lt;th&gt;Counters&lt;/th&gt;
          &lt;th&gt;Type specific arguments&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;指定封包要做怎麼樣的處理&lt;/td&gt;
          &lt;td&gt;指定的速率&lt;/td&gt;
          &lt;td&gt;自己設定的單位&lt;/td&gt;
          &lt;td&gt;計數器&lt;/td&gt;
          &lt;td&gt;其他參數&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Meter Band 在 Meter Table 代表的是當此類的封包達到一定的速率後要如何處理，因此會記錄一些重要資訊。&lt;/p&gt;
&lt;p&gt;Band Type 在此有兩種處理方式 :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;drop : 在封包超過一定流量時，直接將封包丟棄。&lt;/li&gt;
&lt;li&gt;dscp_remark : 當封包超過一定流量時，將封包的優先度降低。&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&#34;tags-sdn&#34;&gt;tags: &lt;code&gt;SDN&lt;/code&gt;
&lt;/h6&gt;</description>
        </item>
        <item>
        <title>OpenFlow Ports</title>
        <link>https://example.com/p/openflow-ports/</link>
        <pubDate>Sat, 16 Nov 2024 14:02:21 +0800</pubDate>
        
        <guid>https://example.com/p/openflow-ports/</guid>
        <description>&lt;h1 id=&#34;軟體定義網路---openflow-ports-介紹--2-1&#34;&gt;軟體定義網路 - OpenFlow Ports 介紹  (2-1)
&lt;/h1&gt;&lt;p&gt;reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/OpenFlow&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenFlow - wiki - en&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://zh.wikipedia.org/zh-tw/OpenFlow&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenFlow&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=6ZEqeWEAnL4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2-1 OpenFlow概述｜OpenFlow Overview&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.netadmin.com.tw/netadmin/zh-tw/technology/FA061FD873454FB2934151DB0A6C89D1?page=2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;區分OpenFlow定義各Port 弄懂軟體定義網路交換器&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;目錄:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;OpenFlow 的特性&lt;/li&gt;
&lt;li&gt;OpenFlow ports&lt;/li&gt;
&lt;li&gt;各種保留埠的特性&lt;/li&gt;
&lt;li&gt;Multiple Controller&lt;/li&gt;
&lt;li&gt;Controller Connection Faliure&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-openflow-的特性&#34;&gt;1. OpenFlow 的特性
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;OpenFlow 是一個在&lt;strong&gt;資料連接層&lt;/strong&gt;的通訊協定。&lt;/li&gt;
&lt;li&gt;可以控制、定義網路交換器的 forwarding plane 來改變封包所走的網路路徑。&lt;/li&gt;
&lt;li&gt;OpenFlow 位於 TCP 之上，在TCP port 6653 (舊版:6633)監聽要建立連接的交換器。&lt;/li&gt;
&lt;li&gt;轉發規則以 Flow 為單位 (一個flow被定義為:兩台電腦所連接的一個 port)。&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;11-openflow-交換器的基本架構&#34;&gt;1.1 OpenFlow 交換器的基本架構
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/kPEyRcA.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;主要動作:&lt;br&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;欄位匹配&lt;li&gt;匹配後動作&lt;li&gt;訪問控制器(packet in / out)&lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h6 id=&#34;switch-processing&#34;&gt;switch processing
&lt;/h6&gt;&lt;ul&gt;
&lt;li&gt;match : 封包進交換器之後會去跟flow table做比對，當比對到時，比對的 flow entry 會寫下要如何進行下一個動作。&lt;/li&gt;
&lt;li&gt;action : 當比對到之後，就會執行之後要做的事情。&lt;/li&gt;
&lt;li&gt;packet in : 當 switch 不知道要如何處理封包的時候，就會執行此動作，詢問 controller 要如何處理此封包。&lt;/li&gt;
&lt;li&gt;packet out : controll 回應 packet in 的相對動作，用來回應 switch 要如何動作。 此地方會有不同方式:
&lt;ol&gt;
&lt;li&gt;第一種會請 controller 直接丟封包到某一個 port 就結束。&lt;/li&gt;
&lt;li&gt;第二種會請 controller 再比對此封包一次，比對完之後再根據 flow table 的內容再傳送出去&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;12-controller-和-switch-之間的連線方式&#34;&gt;1.2 controller 和 switch 之間的連線方式
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;連線方式&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/6hzuv5N.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;In-Band&lt;li&gt; Out-of-Band&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;In-Band : 指的是 controller 和 switch 的控制封包走的路徑是和一般封包一樣，因此控制封包會使用 TLS 加密。會使用的port : &lt;strong&gt;LOCAL port&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;Out-of-Band : 代表有特殊路徑 (port) 來傳送控制封包。會使用的 port : &lt;strong&gt;CONTROLLER port&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-openflow-ports&#34;&gt;2. OpenFlow Ports
&lt;/h3&gt;&lt;h4 id=&#34;21-openflow-ports&#34;&gt;2.1 OpenFlow Ports
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;實體埠 (physical port) : 在乙太網路的交換器上，會直接對應到實際的port。另外可以指定 Queue ID 來區隔 QoS。&lt;/li&gt;
&lt;li&gt;邏輯埠 (logical port) : 保留給設備商，讓設備商可以自行定義。這種邏輯性的埠指的是與硬體上無關，而是由軟體定義並且管理的埠，這些埠不見得都是由OpenFlow協定所建立，也可能是其他方式所產生的。 可以指定 Tunnel ID。&lt;/li&gt;
&lt;li&gt;保留埠 (reversed port) ： 也是一種 Logical port ，由 OpenFlow 先定義好。(LOCAL、NORMAL、FLOOD可以不支援。)

&lt;img src=&#34;https://i.imgur.com/Hn3jPde.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;22-port-queues&#34;&gt;2.2 Port Queues
&lt;/h4&gt;&lt;p&gt;指的是在某一個 physical port 裡面，設計很多個 queue 來做 QoS ，而不同的 Queue 會有不同的優先權。&lt;/p&gt;
&lt;h3 id=&#34;3-各種保留埠的特性&#34;&gt;3. 各種保留埠的特性
&lt;/h3&gt;&lt;h4 id=&#34;31-all-required&#34;&gt;3.1 ALL (Required)
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/jlF1GOy.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;主要特點:&lt;br&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;對所有的port傳送封包，除了 ingress port(也就是輸入封包的port)&lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;32-controller-required&#34;&gt;3.2 CONTROLLER (Required)
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/Y9b9zmn.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;主要特點:&lt;br&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;是 Out-of-Band 的傳輸模式，由特殊的 port 互相傳輸。&lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;33-table-reqiured&#34;&gt;3.3 TABLE (Reqiured)
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/UbRVrID.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;主要特點:&lt;br&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;主要用於 packet out，即如果 controller 對 switch 的指令是要 switch &lt;a class=&#34;link&#34; href=&#34;#switch-processing&#34; &gt;再次比對封包時&lt;/a&gt;，就會使用到此封包。&lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;34-in_port-required&#34;&gt;3.4 IN_PORT (Required)
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/2SfxJuB.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;主要特點:&lt;br&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;會將封包回傳給原本輸入進封包的 port 。&lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;36-local-optional&#34;&gt;3.6 LOCAL (Optional)
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/BwyW79a.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;主要特點:&lt;br&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;是 In-Band 的傳輸模式，因此會使用 TLS 加密。&lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;37-normal-optional&#34;&gt;3.7 NORMAL (Optional)
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/T0zRi3S.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;主要特點:&lt;br&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;當此port 所傳送的封包所要使用的協定不是OpenFlow時，就會傳送此訊號。&lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;37-flood-optional&#34;&gt;3.7 FLOOD (Optional)
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/hai16CV.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;主要特點:&lt;br&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;當廣播的動作要由其他協定而不是 OpenFlow 做時會使用到此功能。 &lt;/li&gt; &lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;4-multiple-controller&#34;&gt;4. Multiple Controller
&lt;/h3&gt;&lt;h4 id=&#34;41-控制器對交換器的三種模式&#34;&gt;4.1 控制器對交換器的三種模式
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;master : 控制器具有完全的控制權 (且唯一)&lt;/li&gt;
&lt;li&gt;slave : 控制器只會向交換器詢問資料&lt;/li&gt;
&lt;li&gt;equal : 控制器具有完全的控制權 (可不唯一)&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;5-controller-connection-faliure&#34;&gt;5. Controller Connection Faliure
&lt;/h3&gt;&lt;h4 id=&#34;51-交換器失去與控制器的連線的兩種方式&#34;&gt;5.1 交換器失去與控制器的連線的兩種方式
&lt;/h4&gt;&lt;ol&gt;
&lt;li&gt;fail secure : 交換器依照失去連接前的flow table 正常運作，但不對控制器再發送任何訊號。&lt;/li&gt;
&lt;li&gt;fail standalone : 交換器回到 legacy (non-OpenFlow) 模式運作。&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&#34;tags-sdn&#34;&gt;tags: &lt;code&gt;SDN&lt;/code&gt;
&lt;/h6&gt;</description>
        </item>
        <item>
        <title>OpenFlow Flow Table</title>
        <link>https://example.com/p/openflow-flow-table/</link>
        <pubDate>Sat, 16 Nov 2024 14:00:21 +0800</pubDate>
        
        <guid>https://example.com/p/openflow-flow-table/</guid>
        <description>&lt;h1 id=&#34;軟體定義網路---openflow-中-flow-table-介紹&#34;&gt;軟體定義網路 - OpenFlow 中 Flow Table 介紹
&lt;/h1&gt;&lt;p&gt;reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cables-solutions.com/whats-openflow-switch-how-it-works.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenFlow Switch: What Is It and How Does it Work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.researchgate.net/figure/Flow-Table-Packet-Processing-Pipeline-2_fig1_318652506&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;圖 : Flow Table Packet Processing Pipeline&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=aaPwiyjwrQM&amp;amp;t&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2-2 FlowTables&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://opennetworking.org/wp-content/uploads/2014/10/openflow-switch-v1.3.5.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenFlow Switch Specification&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://download.huawei.com/mdl/image/download?uuid=12ee231f981047fabd03378e1442168f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;圖 : 各版本openflow 的 header 長相&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.jianshu.com/p/acfeae1771b3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;OpenFlow 交換器規範 1.3.0 (1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.ryu-sdn.org/zh_tw/html/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ryubook 1.0 說明文件&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;目錄:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#1-Open-Flow-%e7%9a%84%e6%9e%b6%e6%a7%8b&#34; &gt;Open Flow 的架構&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#2-Flow-Table-%e5%92%8c-Flow-Entry&#34; &gt;Flow Table 和 Flow Entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#3-Flow-Table-%e7%9a%84%e6%ac%84%e4%bd%8d&#34; &gt;Flow Table 欄位&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;#4-Action-Set-%e4%b8%ad-Action-%e7%9a%84%e5%9f%b7%e8%a1%8c%e9%a0%86%e5%ba%8f&#34; &gt;Action Set 中 Action 的執行順序&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-open-flow-的架構&#34;&gt;1. Open Flow 的架構
&lt;/h3&gt;&lt;p&gt;
&lt;img src=&#34;https://www.cables-solutions.com/wp-content/uploads/2018/07/what-is-openflow-switch.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
        alt=&#34;圖1 : OpenFlow 架構示意圖&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;在 OpenFlow 的交換器中，最主要的結構就是 Flow Table。&lt;li&gt;Flow Table 彼此具有順序性，封包也被規定不能由後往前傳遞。&lt;/ul&gt; 
&lt;h4 id=&#34;11-flow-table-的-pipeline&#34;&gt;1.1 Flow Table 的 Pipeline
&lt;/h4&gt;&lt;p&gt;
&lt;img src=&#34;https://www.researchgate.net/publication/318652506/figure/fig1/AS:519482711998464@1500865738587/Flow-Table-Packet-Processing-Pipeline-2.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
        alt=&#34;圖2: OpenFlow Pipeline 簡易流程圖&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://i.imgur.com/MC05Xma.jpg&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
        alt=&#34;圖3: OpenFlow Pipeline 詳細流程圖&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;h3 id=&#34;2-flow-table-和-flow-entry&#34;&gt;2. Flow Table 和 Flow Entry
&lt;/h3&gt;&lt;p&gt;※此 Flow Table為 OpenFlow 1.3 的樣式，1.0~1.2 版本可以參考 &lt;a class=&#34;link&#34; href=&#34;https://support.huawei.com/enterprise/en/doc/EDOC1100196737&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;1&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;https://download.huawei.com/mdl/image/download?uuid=12ee231f981047fabd03378e1442168f&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;2&lt;/a&gt; &lt;a class=&#34;link&#34; href=&#34;https://davidleitw.github.io/posts/sdn2/#flow-table&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;3&lt;/a&gt;&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Match Fields&lt;/th&gt;
          &lt;th&gt;Priority&lt;/th&gt;
          &lt;th&gt;Counter&lt;/th&gt;
          &lt;th&gt;Instructions&lt;/th&gt;
          &lt;th&gt;Timeouts&lt;/th&gt;
          &lt;th&gt;Cookie&lt;/th&gt;
          &lt;th&gt;Flags&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;整個表會稱為 Flow Table，裡面的每個 row 稱為 Flow Entry。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3-flow-table-的欄位&#34;&gt;3 Flow Table 的欄位
&lt;/h3&gt;&lt;h4 id=&#34;31-各個欄位的作用&#34;&gt;3.1 各個欄位的作用:
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;名稱&lt;/th&gt;
          &lt;th&gt;解釋&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.ryu-sdn.org/zh_tw/html/openflow_protocol.html#match&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Match Fields&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;要去比對 packet 有沒有符合 flow entry，比對的內容至少有以下: &lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;ingress port&lt;/li&gt;&lt;li&gt;packet header&lt;/li&gt; &lt;li&gt;optional metadate from previous table&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Priority&lt;/td&gt;
          &lt;td&gt;flow entry 的優先程度，&lt;strong&gt;數字越高越優先&lt;/strong&gt;，最小為零。&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Counter&lt;/td&gt;
          &lt;td&gt;紀錄以下資訊(當封包mtach時就更新): &lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;Received Packet&lt;/li&gt;&lt;li&gt;Received Data&lt;/li&gt;&lt;li&gt;Duration(秒數，&lt;strong&gt;一定要紀錄&lt;/strong&gt;，指的是 flow entry 存在多久)&lt;/li&gt;&lt;li&gt;Duration(奈秒)&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;&lt;a class=&#34;link&#34; href=&#34;https://book.ryu-sdn.org/zh_tw/html/openflow_protocol.html#instruction&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Instruction&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;當封包符合 flow entry 的條件時，所要做的動作，包括以下:&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;Meter : 要去看符合此 Flow Table 的封包量是否已經太多。&lt;/li&gt;&lt;li&gt;Apply Actions : 馬上對封包進行動作。例如把封包的header改掉，&lt;strong&gt;但不改變 Action set 的內容。&lt;/strong&gt; &lt;/li&gt;&lt;li&gt;Clear/Write Actions (必須):修改封包中 Action set 的內容。&lt;/li&gt;&lt;li&gt;Write Metadata : 加入一些 metadata 給後面的 flow table 比對用。&lt;/li&gt;&lt;li&gt;Goto_Table(必須):指示封包之後要往哪一個 flow table 前進。&lt;/li&gt;&lt;li&gt;flood : 將接收到的封包廣播(除了輸入的 port 以外)&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Timeouts&lt;/td&gt;
          &lt;td&gt;標記此 flow entry 甚麼時候要被消除，包含以下兩種形式:&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;idle-timeout : 在閒置多久之後要被消除。&lt;/li&gt; &lt;li&gt;hard-timeout : 在經過多少時間之後，不管有沒有閒置都要被消除。&lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Cookie&lt;/td&gt;
          &lt;td&gt;&lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt; 在處理封包的時候不會使用到此欄位。&lt;/li&gt; &lt;li&gt;opaque data value chosen by the controller. May be used by the controller to filter flow entries affected by flow statistics, flow modification and flow deletion requests.  &lt;/li&gt;&lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;Flags&lt;/td&gt;
          &lt;td&gt;用來改變 flow entry 的管理方式，例如 OFPFF_SEND_FLOW_REM 會觸發到刪除此 flow entry 的 message。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;32-flow-table-管線處理流程&#34;&gt;3.2 Flow Table 管線處理流程
&lt;/h4&gt;&lt;p&gt;
&lt;img src=&#34;https://i.imgur.com/JnHJVhP.jpg&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
        alt=&#34;圖4: Flow Table 管線處理流程&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;封包一定要從 table 0 開始比對。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;由 priority 高的開始比對&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;33-table-miss-entry&#34;&gt;3.3 Table Miss Entry
&lt;/h4&gt;&lt;p&gt;以下是某個 Flow Table :&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Match Fields&lt;/th&gt;
          &lt;th&gt;Priority&lt;/th&gt;
          &lt;th&gt;Counter&lt;/th&gt;
          &lt;th&gt;Instructions&lt;/th&gt;
          &lt;th&gt;Timeouts&lt;/th&gt;
          &lt;th&gt;Cookie&lt;/th&gt;
          &lt;th&gt;Flags&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;ANY&lt;/td&gt;
          &lt;td&gt;0&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
          &lt;td&gt;&amp;hellip;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;由上表可以看到，Table Miss Entry 所使用的 Match Feild 是 ANY，且因為是最後比的，因此 Priority 是最低的 0 。&lt;/p&gt;
&lt;h3 id=&#34;4-action-set-中-actionhttpsbookryu-sdnorgzh_twhtmlopenflow_protocolhtmlaction-的執行順序&#34;&gt;4. Action Set 中 &lt;a class=&#34;link&#34; href=&#34;https://book.ryu-sdn.org/zh_tw/html/openflow_protocol.html#action&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Action&lt;/a&gt; 的執行順序
&lt;/h3&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;順位&lt;/th&gt;
          &lt;th&gt;名稱&lt;/th&gt;
          &lt;th&gt;功能&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;1.&lt;/td&gt;
          &lt;td&gt;copy &lt;a class=&#34;link&#34; href=&#34;&#34; &gt;TTL&lt;/a&gt; inwards&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;2.&lt;/td&gt;
          &lt;td&gt;pop&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;3.&lt;/td&gt;
          &lt;td&gt;push-&lt;a class=&#34;link&#34; href=&#34;https://www.google.com/search?q=MPLS&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;MPLS&lt;/a&gt;&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;4.&lt;/td&gt;
          &lt;td&gt;push-PBB&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;5.&lt;/td&gt;
          &lt;td&gt;push-VLAN&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;6.&lt;/td&gt;
          &lt;td&gt;copy TTL&lt;/td&gt;
          &lt;td&gt;&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7.&lt;/td&gt;
          &lt;td&gt;decrement TTL&lt;/td&gt;
          &lt;td&gt;TTL-=1&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;8.&lt;/td&gt;
          &lt;td&gt;set (set-field)&lt;/td&gt;
          &lt;td&gt;修改封包內的某些欄位&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;9.&lt;/td&gt;
          &lt;td&gt;qos (set-queue)&lt;/td&gt;
          &lt;td&gt;寫入一個 queue id 進到指定封包內&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;10.&lt;/td&gt;
          &lt;td&gt;group&lt;/td&gt;
          &lt;td&gt;如果有指定 group action ，就依照 group table 內的指令做&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;11.&lt;/td&gt;
          &lt;td&gt;output&lt;/td&gt;
          &lt;td&gt;如果沒有指定 group action，則在 output action 指定的 port 轉發 packet。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span id=&#34;TTL&#34;&gt; TTL &lt;/span&gt; : Time To Live
指一個封包在經過一個路由器時，可傳遞的最長距離（躍點數）。目的是防止封包因不正確的路由表等原因造成的無限循環而無法送達及耗盡網路資源。&lt;/li&gt;
&lt;/ul&gt;
&lt;h6 id=&#34;tags-sdn&#34;&gt;tags: &lt;code&gt;SDN&lt;/code&gt;
&lt;/h6&gt;</description>
        </item>
        <item>
        <title>mininet commands and parameters</title>
        <link>https://example.com/p/mininet-commands-and-parameters/</link>
        <pubDate>Sat, 16 Nov 2024 13:51:21 +0800</pubDate>
        
        <guid>https://example.com/p/mininet-commands-and-parameters/</guid>
        <description>&lt;h1 id=&#34;軟體定義網路---mininet-基本指令與參數介紹-1-4&#34;&gt;軟體定義網路 - Mininet 基本指令與參數介紹 (1-4)
&lt;/h1&gt;&lt;p&gt;reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ithelp.ithome.com.tw/articles/10243780&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Day10 菜鳥的Mininet紀錄-Mininet指令&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.kshuang.xyz/doku.php/ccis_lab:sdn:mininet:mininet_basic&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Mininet基本演練
&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://tingkuan.wordpress.com/2017/11/09/%E3%80%90mininet%E6%8C%87%E4%BB%A4%E4%BB%8B%E7%B4%B9%E3%80%91/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【Mininet指令介紹】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://airtoncs.wordpress.com/2014/07/30/using-gnome-terminal-instead-of-xterm-on-mininet/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;USING GNOME-TERMINAL INSTEAD OF XTERM ON MININET&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;目錄:&lt;/p&gt;
&lt;ol start=&#34;0&#34;&gt;
&lt;li&gt;Mininet 是甚麼&lt;/li&gt;
&lt;li&gt;Mininet 的特性&lt;/li&gt;
&lt;li&gt;基本 Mininet 指令&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- 3. Mininet 參數 --&gt;
&lt;hr&gt;
&lt;h3 id=&#34;0-mininet-是甚麼&#34;&gt;0. Mininet 是甚麼
&lt;/h3&gt;&lt;p&gt;Mininet是一個網路拓樸模擬器(network emulation orchestration system)，它可以模擬出一整個有路由器、交換器、主機的叢集。 (&lt;a class=&#34;link&#34; href=&#34;https://ithelp.ithome.com.tw/articles/10243028&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;reference&lt;/a&gt;)&lt;/p&gt;
&lt;h3 id=&#34;1-mininet-的特性&#34;&gt;1. Mininet 的特性
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;支援OpenFlow&lt;/li&gt;
&lt;li&gt;可以自行定義複雜的拓樸&lt;/li&gt;
&lt;li&gt;因為是基於Linux開發的，所以具有高硬體移植性。&lt;/li&gt;
&lt;li&gt;具有高拓展性&lt;/li&gt;
&lt;li&gt;提供Python API，所以可以方必多人協同開發。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-基本-mininet-指令&#34;&gt;2. 基本 Mininet 指令
&lt;/h3&gt;&lt;h4 id=&#34;1-net&#34;&gt;1. net
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/geqpnSh.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;列出現在所有節點的資訊。&lt;br&gt; 在此可以看到: &lt;br&gt; &lt;ul style=&#39;list-style-position:outside;&#39;&gt;&lt;li&gt;有兩台虛擬機h1和h2&lt;li&gt;h1接上的是&lt;strong&gt;eth0&lt;/strong&gt;的網路卡，並對接到交換器 s0 的 eth1上。&lt;li&gt;h2接上的也是自己的&lt;strong&gt;eth0&lt;/strong&gt;的網路卡，並對接到交換器 s0 的 eth2上。&lt;/ul&gt;&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;2-nodes&#34;&gt;2. nodes
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/Xw9LPrK.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;顯示可用的所有節點。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;3-links&#34;&gt;3. links
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/RBn9O0s.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;列出目前的節點連接狀態。 後面的OK代表之間的連線正常。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;4-ports&#34;&gt;4. ports
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/zVQNZvR.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;查看交換機連接的port&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;5-dump&#34;&gt;5. dump
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/WuzcpLo.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;顯示各節點資訊 &lt;br&gt; pid -&amp;gt; process id&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;6-intfs&#34;&gt;6. intfs
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/qsbP3pb.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;列出各個設備所有的網路介面。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;7-iperf&#34;&gt;7. iperf
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/j6e1RR1.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;在兩個節點之間進行 iperf 的測試。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;8-pingall&#34;&gt;8. pingall
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/EkVaeO5.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;ping 所有的相連的裝置。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;9-pingallfull&#34;&gt;9. pingallfull
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/1L57NVb.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;顯示詳細資訊的pingall。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;10-exit&#34;&gt;10. exit
&lt;/h4&gt;&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th style=&#34;text-align: center&#34;&gt;圖片&lt;/th&gt;
          &lt;th&gt;說明&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td style=&#34;text-align: center&#34;&gt;
&lt;img src=&#34;https://i.imgur.com/OvN8Jad.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/td&gt;
          &lt;td&gt;離開mininet。&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;11-xterm--gterm&#34;&gt;11. xterm / gterm
&lt;/h4&gt;&lt;p&gt;使用 xterm {host/switch} 可以打開虛擬的終端，模擬該 switch 或 host 並對他輸入指令。

&lt;img src=&#34;https://i.imgur.com/O4lEsOD.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://i.imgur.com/NEkxkFy.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;!-- ### 3. Mininet 參數

#### 1. 總覽
`mn [–topo] [–controller] [–link] [–switch] [–mac] [–nat] [–ipbase]`

#### 2. topo --&gt;
&lt;h6 id=&#34;tags-sdn-mininet&#34;&gt;tags: &lt;code&gt;SDN&lt;/code&gt; &lt;code&gt;mininet&lt;/code&gt;
&lt;/h6&gt;</description>
        </item>
        <item>
        <title>Open vSwitch</title>
        <link>https://example.com/p/open-vswitch/</link>
        <pubDate>Sat, 16 Nov 2024 12:51:21 +0800</pubDate>
        
        <guid>https://example.com/p/open-vswitch/</guid>
        <description>&lt;h1 id=&#34;軟體定義網路---open-vswitch-1-3&#34;&gt;軟體定義網路 - Open vSwitch (1-3)
&lt;/h1&gt;&lt;p&gt;reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://openwrt-nctu.gitbook.io/project/experiment-sdn/ovs-on-openwrt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;在 OpenWRT 上架設 Open vSwitch (OVS)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/watch?v=-jX4ce_WaOM&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Open vSwitch&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;目錄:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open vSwitch&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;1-open-vswitch&#34;&gt;1. Open vSwitch
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;是一種虛擬交換器，目的是實現網路的虛擬化&lt;/li&gt;
&lt;li&gt;可以用來作為 L2 Switch，或其他層的 Switch&lt;/li&gt;
&lt;li&gt;支援 OpenFlow 協定&lt;/li&gt;
&lt;li&gt;針對 Linux 核心開發&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;2-open-vswitch-的特性&#34;&gt;2. Open vSwitch 的特性
&lt;/h3&gt;&lt;p&gt;
&lt;img src=&#34;https://i.imgur.com/gjlrCqx.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;

1. 成本低
2. 工作效率高
3. 占用資源小
4. 配置靈活性高&lt;/p&gt;
&lt;h3 id=&#34;3-open-vswitch-架構&#34;&gt;3. Open vSwitch 架構
&lt;/h3&gt;&lt;!--     ![](https://i.imgur.com/tO5EZvx.png) --&gt;
&lt;p&gt;
&lt;img src=&#34;https://i.imgur.com/bCnpF6C.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;p&gt;ovs-vswitchd ${\to}$ switch 的邏輯運作 、 control plane 的抽象化，提供像 OpenFlow 的介面，可以跟外部的控制器連接。
ovsdb-server ${\to}$ 管理輕量級的資料庫:ovsdb，存放資料轉發的規則表(flow-table)，裡面的規則稱作 : flow-role
openvswitch.ko ${\to}$ep su3 負責資料轉發層的 data plane 的工作，&lt;/p&gt;
&lt;h6 id=&#34;tags-sdn&#34;&gt;tags: &lt;code&gt;SDN&lt;/code&gt;
&lt;/h6&gt;</description>
        </item>
        <item>
        <title>SDN concept</title>
        <link>https://example.com/p/sdn-concept/</link>
        <pubDate>Sat, 16 Nov 2024 12:39:48 +0800</pubDate>
        
        <guid>https://example.com/p/sdn-concept/</guid>
        <description>&lt;h1 id=&#34;軟體定義網路---sdn-主要概念與分層架構-1-2&#34;&gt;軟體定義網路 - SDN 主要概念與分層架構 (1-2)
&lt;/h1&gt;&lt;p&gt;reference:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/a1tnptPFH0s&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SDN架構&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://sites.google.com/a/cnsrl.cycu.edu.tw/da-shu-bi-ji/sdn&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SDN - 大叔筆記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://showipprotocols-tw.blogspot.com/2014/06/northbound-southbound-east-west-bound.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;北向、南向，都在講些什麼 &amp;ldquo;東西&amp;rdquo;?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://hackmd.io/@UULi/SyqrpEntt&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;計算機網路筆記-ch4&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://en.wikipedia.org/wiki/Software-defined_networking&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Software-defined networking - wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.techtarget.com/searchnetworking/definition/software-defined-networking-SDN&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What is software-defined networking?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li&gt;SDN主要概念&lt;/li&gt;
&lt;li&gt;SDN分層架構&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h3 id=&#34;0-網路術語&#34;&gt;0. 網路術語
&lt;/h3&gt;&lt;img src=&#34;https://i.imgur.com/Nv98Zic.png&#34; alt=&#34;drawing&#34; width=&#34;400&#34;/&gt;
&lt;p&gt;在控制器的角度上 :
1. 往下傳達控制物理網路元件指令的API，習慣上稱為南向(Southbound API)
2. 往上接受服務請求的API，習慣上稱為北向(Northbound API)。&lt;/p&gt;
&lt;h3 id=&#34;1-傳統路由器架構&#34;&gt;1. 傳統路由器架構
&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;維基百科 :&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;路由（routing） : 就是通過互聯的網路把資訊從源位址傳輸到目的位址的活動。路由發生在OSI網路參考模型中的第三層即網路層。&lt;/li&gt;
&lt;li&gt;轉送 : 將路由器輸入端的封包移送至適當的路由器輸出端。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;所以，路由器（英語：Router，又稱路徑器）是一種電訊網路裝置，提供路由與轉送兩種重要機制。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2-openflow-路由器架構&#34;&gt;2. OpenFlow 路由器架構
&lt;/h3&gt;&lt;img src=&#34;https://i.imgur.com/LzlzwJD.png&#34; alt=&#34;drawing&#34; width=&#34;400&#34;/&gt;
&lt;ol&gt;
&lt;li&gt;SDN在這裡會把路由分成 control plane 和 forwarding plane。&lt;/li&gt;
&lt;li&gt;在control plane 和 forwarding plane之間新增一個 OpenFlow protocol 以做到分離效果。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3-從傳統路由器轉化成-sdn-路由器的步驟&#34;&gt;3. 從傳統路由器轉化成 SDN 路由器的步驟
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;把原先都是合併在一起的 control plane 和 forwarding plane 分離。&lt;/li&gt;
&lt;li&gt;定義此兩層之間的標準介面 (API)&lt;/li&gt;
&lt;li&gt;在把分離後的 control plane 集中管理，交給 controller，再透過 Openflow 協定控制其行為。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;4-sdn-網路架構&#34;&gt;4. SDN 網路架構
&lt;/h3&gt;&lt;p&gt;
&lt;img src=&#34;https://i.imgur.com/XvYtqdz.png&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;p&gt;控制器可以透過openflow的管道與交換器溝通，也可以使用既有的網管協定與交換器溝通。&lt;/p&gt;
&lt;h3 id=&#34;5-sdn的三層架構&#34;&gt;5. SDN的三層架構
&lt;/h3&gt;&lt;!-- ![](https://i.imgur.com/mgG2ss7.png) --&gt;
&lt;!-- ![](https://i.imgur.com/PRKDyPM.png) --&gt;
&lt;img src=&#34;https://cdn.ttgtmedia.com/rms/onlineimages/sdn-sdn_architecture.png&#34; alt=&#34;drawing&#34; width=&#34;300&#34;/&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Application layer
包含普通網絡應用程式或功能，例如防火牆、附載平衡器等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Control layer
代表集中式 SDN 控制器軟體，可以稱為SDN中的大腦，管理整個網路的流向和流量。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Infrastructure layer
就是由所有的交換器所組成。負責傳輸網路流量。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- 
### 6. 電腦系統的演進趨勢
![](https://i.imgur.com/pdsdN42.png)
![](https://i.imgur.com/qpxQWHU.png)
 --&gt;
&lt;h3 id=&#34;6-sdn的三個特色&#34;&gt;6. SDN的三個特色
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;平台標準化
每一個switch 都只要懂 openflow的協定就好，不用細分成很多層的switch&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;軟體平台化
軟體不用對硬體開發，是對平台開發&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;資訊中心化
軟體可以看到網路的全貌，可以做到全體的最佳化&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h6 id=&#34;tags-sdn&#34;&gt;tags: &lt;code&gt;SDN&lt;/code&gt;
&lt;/h6&gt;</description>
        </item>
        <item>
        <title>Comparison Between SDN and Traditional Network</title>
        <link>https://example.com/p/comparison-between-sdn-and-traditional-network/</link>
        <pubDate>Mon, 11 Nov 2024 22:11:02 +0800</pubDate>
        
        <guid>https://example.com/p/comparison-between-sdn-and-traditional-network/</guid>
        <description>&lt;img src="https://example.com/p/comparison-between-sdn-and-traditional-network/pawel-czerwinski-8DujUEpxazE-unsplash.jpg" alt="Featured image of post Comparison Between SDN and Traditional Network" /&gt;&lt;h1 id=&#34;軟體定義網路sdn與傳統網路架構的比較&#34;&gt;軟體定義網路（SDN）與傳統網路架構的比較
&lt;/h1&gt;&lt;p&gt;原始連結: &lt;a class=&#34;link&#34; href=&#34;https://hackmd.io/@91UWhfTFSYS7v0K-bURk6A/r1WWxc8Ko&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Link&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Reference&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/pIU-3gzlu9I&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;1-1 傳統網路的演進與 SDN 的崛起｜ Architecture of Traditional Network and Emergence of SDN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://ithelp.ithome.com.tw/articles/10267704&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;TCP/IP，網際網路的基礎通訊架構&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;目錄&#34;&gt;目錄
&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;傳統網路架構概述&lt;/li&gt;
&lt;li&gt;SDN 嘗試解決的問題(傳統 Internet 的既有限制)&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;傳統網路架構&#34;&gt;傳統網路架構
&lt;/h2&gt;&lt;p&gt;在早期網際網路的發展中，為了讓多台電腦能夠彼此溝通，建立在&lt;strong&gt;TCP/IP 協議&lt;/strong&gt;基礎上的傳統網路架構誕生了。這種架構具備以下特徵：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;通訊協議的重要性&lt;/strong&gt;&lt;br&gt;
兩台電腦或多台電腦需要可以共同溝通時，必須要有相同的 protocol。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;網路架構形式&lt;/strong&gt;&lt;br&gt;
網路中的設備可以採用以下兩種架構之一：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;主從式架構（Client-Server）&lt;/strong&gt;：由伺服器提供服務，客戶端發起請求。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;對等式架構（Peer-to-Peer）&lt;/strong&gt;：所有節點平等，彼此直接傳遞資料。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;基礎設備需求&lt;/strong&gt;&lt;br&gt;
傳輸資料需要依賴網路設備，例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;交換器（Switch）&lt;/strong&gt;：用於內部網路中的資料交換。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;路由器（Router）&lt;/strong&gt;：管理網路間的資料流動。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;集線器&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;這些設備通常由網路供應商（ISP）部署於其資料中心內，構成整體的網路基礎設施。&lt;/p&gt;
&lt;p&gt;
&lt;img src=&#34;https://ithelp.ithome.com.tw/upload/images/20210919/20128159lPmUQe3GJx.jpg&#34;
    width=&#34;800&#34;
    height=&#34;600&#34;
    
    loading=&#34;lazy&#34;
    
        alt=&#34;圖1: 傳統網路架構示意圖&#34;
    
    
        class=&#34;gallery-image&#34; 
        data-flex-grow=&#34;133&#34;
        data-flex-basis=&#34;320px&#34;
    
&gt;
&lt;/p&gt;
&lt;h2 id=&#34;sdn-想解決網路設備的甚麼問題&#34;&gt;SDN 想解決網路設備的甚麼問題
&lt;/h2&gt;&lt;p&gt;隨著網路需求不斷增長，傳統網路架構的侷限逐漸明顯。**軟體定義網路（SDN）**作為新一代網路架構，針對以下問題提供了解決方法：&lt;/p&gt;
&lt;h3 id=&#34;1-缺乏彈性inflexibility&#34;&gt;1. 缺乏彈性（Inflexibility）
&lt;/h3&gt;&lt;p&gt;傳統網路的硬體設備安裝後，通常很少進行調整或變更，原因在於：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;設備配置複雜且靜態。&lt;/li&gt;
&lt;li&gt;網路拓撲固定，難以快速響應變化的需求。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SDN 的解決方式&lt;/strong&gt;：&lt;br&gt;
通過將 Control Plane 與 Data Plane 分離，SDN 可以更動態地控制網路流量。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;2-供應商鎖定vendor-lock-in&#34;&gt;2. 供應商鎖定（Vendor Lock-In）
&lt;/h3&gt;&lt;p&gt;傳統網路設備通常由單一供應商提供，擴展時可能面臨以下問題：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;與其他供應商設備的相容性低。&lt;/li&gt;
&lt;li&gt;原供應商的解決方案最適合原始架構，導致難以更換供應商。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;SDN 的解決方式&lt;/strong&gt;：&lt;br&gt;
SDN 採用開放式標準，允許不同品牌的設備共同運作，減少對單一供應商的依賴。&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
